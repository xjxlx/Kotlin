plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}
def configCompile = rootProject.ext.android

android {
    compileSdkVersion configCompile.compileSdkVersion
    buildToolsVersion configCompile.buildToolsVersion

    defaultConfig {
        applicationId "com.xjx.kotlin"
        minSdkVersion configCompile.minSdkVersion
        targetSdkVersion configCompile.targetSdkVersion
        versionCode configCompile.versionCode
        versionName configCompile.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        test {
            // storeFile file('/Users/dasouche/StudioWorks/App/jks/apphelper.jks')
            storeFile file('../jks/apphelper.jks')
            storePassword '123456'
            keyPassword '123456'
            keyAlias 'apphelper'
        }
        config {
            // storeFile file('/Users/dasouche/StudioWorks/App/jks/apphelper.jks')
            storeFile file('../jks/apphelper.jks')
            storePassword '123456'
            keyAlias 'apphelper'
            keyPassword '123456'
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.config
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            // 给applicationId添加后缀“.debug”
            // applicationIdSuffix ".debug"
            signingConfig signingConfigs.test
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding = true
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation project(path: ':apphelper')
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
//    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'

    implementation 'androidx.viewpager2:viewpager2:1.0.0'

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'// 必要retrofit依赖
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0' // 必要依赖，和Rxjava结合必须用到，下面会提到
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'// 必要依赖，解析json字符所用
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'// 必要依赖，把数据转产成字符串使用

    implementation 'com.github.tbruyelle:rxpermissions:0.12'
    implementation 'io.reactivex.rxjava3:rxjava:3.0.4'

    //协程依赖
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4"

    // 反射
    implementation "org.jetbrains.kotlin:kotlin-reflect"
}